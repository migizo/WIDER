/*
  ==============================================================================

  This is an automatically generated GUI class created by the Projucer!

  Be careful when adding custom code to these files, as only the code within
  the "//[xyz]" and "//[/xyz]" sections will be retained when the file is loaded
  and re-saved.

  Created with Projucer version: 6.0.7

  ------------------------------------------------------------------------------

  The Projucer is part of the JUCE library.
  Copyright (c) 2020 - Raw Material Software Limited.

  ==============================================================================
*/

//[Headers] You can add your own extra header files here...
//[/Headers]

#include "GuiComponent.h"


//[MiscUserDefs] You can add your own user definitions and misc code here...
//[/MiscUserDefs]

//==============================================================================
GuiComponent::GuiComponent (WIDERAudioProcessor& p)
    : processor(p),valueTreeState(p.parameters)
{
    //[Constructor_pre] You can add your own custom stuff here..
    openGLContext.attachTo(*this);
    //[/Constructor_pre]

    wideTextEditor.reset (new juce::TextEditor ("wideTextEditor"));
    addAndMakeVisible (wideTextEditor.get());
    wideTextEditor->setMultiLine (false);
    wideTextEditor->setReturnKeyStartsNewLine (false);
    wideTextEditor->setReadOnly (false);
    wideTextEditor->setScrollbarsShown (true);
    wideTextEditor->setCaretVisible (true);
    wideTextEditor->setPopupMenuEnabled (true);
    wideTextEditor->setColour (juce::TextEditor::backgroundColourId, juce::Colour (0x00000000));
    wideTextEditor->setText (TRANS("50%"));

    wideTextEditor->setBounds (144, 210, 50, 16);

    cachedImage_bg_png_1 = juce::ImageCache::getFromMemory (bg_png, bg_pngSize);

    //[UserPreSize]

    // IDで紐付けされてる
    textEditorAttachment.reset(new TextEditorAttachment(valueTreeState, "WIDE", *wideTextEditor.get(), " ", "%"));

    wideTextEditor->setJustification(juce::Justification::centred);
    wideTextEditor->setColour (juce::TextEditor::outlineColourId, juce::Colours::transparentWhite);
    wideTextEditor->setColour (juce::TextEditor::focusedOutlineColourId, juce::Colours::transparentWhite);

    //[/UserPreSize]

    setSize (340, 246);


    //[Constructor] You can add your own custom stuff here..
    //[/Constructor]
}

GuiComponent::~GuiComponent()
{
    //[Destructor_pre]. You can add your own custom destruction code here..
    textEditorAttachment = nullptr;
    openGLContext.detach();
    //[/Destructor_pre]

    wideTextEditor = nullptr;


    //[Destructor]. You can add your own custom destruction code here..
    //[/Destructor]
}

//==============================================================================
void GuiComponent::paint (juce::Graphics& g)
{
    //[UserPrePaint] Add your own custom painting code here..
    //[/UserPrePaint]

    g.fillAll (juce::Colour (0xff46a0aa));

    {
        int x = 0, y = 0, width = 340, height = 246;
        //[UserPaintCustomArguments] Customize the painting arguments here..
        //[/UserPaintCustomArguments]
        g.setColour (juce::Colours::black);
        g.drawImage (cachedImage_bg_png_1,
                     x, y, width, height,
                     0, 0, cachedImage_bg_png_1.getWidth(), cachedImage_bg_png_1.getHeight());
    }

    //[UserPaint] Add your own custom painting code here..
    //[/UserPaint]
}

void GuiComponent::resized()
{
    //[UserPreResize] Add your own custom resize code here..
    //[/UserPreResize]

    //[UserResized] Add your own custom resize handling here..
    //[/UserResized]
}



//[MiscUserCode] You can add your own definitions of your custom methods or any other code here...
void GuiComponent::textEditorReturnKeyPressed(TextEditor& t) {
    onChangeTextEdit(t);
}

void GuiComponent::textEditorFocusLost(TextEditor& t) {
    onChangeTextEdit(t);
}

void GuiComponent::onChangeTextEdit(TextEditor& t) {
    t.setText(t.getText().trim());

    if (&t == wideTextEditor.get())
    {
        std::cout << "onChangeTextEdit: " << t.getText().getFloatValue() << std::endl;
        processor.wideParameter->store(t.getText().getFloatValue());
    }
}
//[/MiscUserCode]


//==============================================================================
#if 0
/*  -- Projucer information section --

    This is where the Projucer stores the metadata that describe this GUI layout, so
    make changes in here at your peril!

BEGIN_JUCER_METADATA

<JUCER_COMPONENT documentType="Component" className="GuiComponent" componentName=""
                 parentClasses="public juce::Component, public juce::TextEditor::Listener"
                 constructorParams="WIDERAudioProcessor&amp; p" variableInitialisers="processor(p),valueTreeState(p.parameters)"
                 snapPixels="8" snapActive="1" snapShown="1" overlayOpacity="0.330"
                 fixedSize="0" initialWidth="340" initialHeight="246">
  <BACKGROUND backgroundColour="ff46a0aa">
    <IMAGE pos="0 0 340 246" resource="bg_png" opacity="1.0" mode="0"/>
  </BACKGROUND>
  <TEXTEDITOR name="wideTextEditor" id="d97eefc28bbb4625" memberName="wideTextEditor"
              virtualName="" explicitFocusOrder="0" pos="144 220 50 16" bkgcol="0"
              initialText="50%" multiline="0" retKeyStartsLine="0" readonly="0"
              scrollbars="1" caret="1" popupmenu="1"/>
</JUCER_COMPONENT>

END_JUCER_METADATA
*/
#endif

//==============================================================================
// Binary resources - be careful not to edit any of these sections!

// JUCER_RESOURCE: bg_png, 3801, "../Resources/bg.png"
static const unsigned char resource_GuiComponent_bg_png[] = { 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,1,84,0,0,0,246,8,6,0,0,0,137,49,127,228,0,0,0,1,115,82,71,66,0,174,206,28,233,0,0,0,56,101,
88,73,102,77,77,0,42,0,0,0,8,0,1,135,105,0,4,0,0,0,1,0,0,0,26,0,0,0,0,0,2,160,2,0,4,0,0,0,1,0,0,1,84,160,3,0,4,0,0,0,1,0,0,0,246,0,0,0,0,113,21,149,109,0,0,14,79,73,68,65,84,120,1,237,220,123,168,101,
85,29,7,112,175,90,90,86,76,106,169,36,168,169,61,236,101,80,105,68,50,73,69,70,165,61,32,8,255,176,132,250,35,3,139,94,20,145,244,79,254,19,41,97,245,143,169,244,32,236,225,36,68,210,203,201,178,135,
153,78,90,74,79,13,205,36,210,204,82,83,211,233,251,27,206,62,44,247,172,115,207,189,233,52,119,238,249,44,248,177,215,107,175,187,247,231,56,203,181,31,231,236,182,155,68,128,0,1,2,4,8,16,32,64,128,0,
1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,
128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,176,198,4,182,110,221,122,117,98,185,116,81,
26,55,46,119,216,105,63,105,185,1,58,109,87,47,55,158,54,2,4,8,236,146,2,157,201,110,86,85,77,172,27,122,39,153,250,51,102,237,52,171,190,55,142,58,2,4,8,236,8,129,61,119,196,160,115,198,188,49,237,23,
52,125,14,73,126,99,226,208,68,165,147,18,53,161,190,172,10,163,116,214,168,60,175,184,101,94,7,237,4,8,16,216,229,4,154,21,228,165,189,131,79,123,93,206,255,189,233,183,177,215,79,29,1,2,4,214,170,192,
238,107,229,192,150,150,150,54,229,88,222,221,28,207,198,38,47,75,128,0,129,53,47,176,102,38,212,137,212,141,107,94,204,1,18,32,64,96,134,192,90,155,80,103,28,166,106,2,4,8,172,125,129,181,54,161,126,
180,33,187,177,201,203,18,32,64,128,192,32,208,60,108,218,238,161,84,218,54,36,234,117,169,33,213,195,169,122,210,47,17,32,64,96,151,17,216,25,175,77,29,154,201,242,140,70,168,94,155,58,41,209,78,160,
111,205,67,170,59,154,62,219,178,147,73,246,148,81,223,113,183,182,188,57,227,108,110,43,228,9,16,32,176,203,11,12,75,207,57,219,90,153,214,228,218,77,105,243,98,127,87,70,37,1,2,107,65,96,45,221,67,61,
63,32,135,101,69,185,105,25,152,237,86,173,203,244,173,166,213,246,159,51,156,102,2,4,8,204,22,216,25,151,252,91,114,56,195,251,166,39,38,127,250,112,120,153,76,151,157,0,211,126,86,86,169,155,211,127,
195,176,207,156,109,253,45,137,0,1,2,235,75,160,185,212,159,62,148,74,93,61,140,106,191,29,117,232,250,58,107,103,67,128,192,34,9,236,212,75,254,201,138,244,236,6,188,125,109,170,169,150,37,64,128,0,129,
169,64,111,133,90,141,86,169,83,34,25,2,4,118,113,129,157,186,66,45,187,206,42,245,188,93,220,212,225,19,32,64,96,199,10,204,90,161,214,95,237,172,82,55,238,216,163,49,58,1,2,4,30,121,129,157,190,66,173,
83,234,172,82,221,75,125,228,63,107,35,18,32,176,131,5,150,118,240,248,211,225,107,133,58,41,212,183,151,182,251,241,232,90,165,166,253,134,196,240,74,212,203,210,111,243,100,159,109,155,244,57,58,153,
79,182,117,115,242,91,50,198,240,138,214,156,174,154,9,16,32,176,139,8,212,132,58,73,151,206,58,228,180,159,62,116,202,246,162,113,191,212,249,166,212,24,69,153,0,129,197,19,200,100,120,245,100,178,60,
105,185,179,111,250,157,49,238,151,182,163,19,55,36,86,154,182,155,148,199,99,42,19,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,
64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,
16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,
2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,129,197,19,88,90,188,
83,118,198,37,176,117,235,214,199,101,243,166,196,129,137,111,46,45,45,93,155,237,52,165,125,159,20,78,77,28,150,248,115,226,220,244,249,123,182,211,148,62,79,75,225,53,137,187,19,95,78,251,29,211,198,
100,210,190,119,54,111,75,212,24,87,37,170,207,214,108,183,75,233,91,125,42,30,53,106,188,51,229,95,101,191,127,142,234,103,22,51,214,238,105,124,122,226,224,68,229,151,75,55,103,236,95,247,58,76,142,
191,206,177,140,150,58,125,238,75,221,31,19,55,101,140,7,59,237,170,8,16,88,239,2,53,225,36,110,72,12,233,129,100,54,182,231,157,242,37,67,227,100,251,139,108,167,147,74,242,207,77,252,123,210,86,155,
219,19,143,29,141,177,169,105,175,236,25,109,123,229,83,87,199,242,181,106,92,38,61,152,182,63,38,46,74,28,59,30,163,45,167,125,191,196,149,137,213,164,63,164,243,254,163,113,142,75,221,45,43,28,164,28,
234,216,106,242,149,8,16,88,36,129,252,195,127,117,103,162,248,252,96,144,182,131,58,237,85,245,188,166,207,39,58,125,78,105,218,247,77,251,125,163,62,127,24,218,135,109,218,223,60,234,51,175,120,127,
58,124,36,177,199,48,70,187,77,253,199,231,13,48,163,253,180,209,56,191,158,209,111,185,234,58,182,19,218,113,228,23,75,96,222,229,208,98,105,44,206,217,214,229,252,56,61,191,169,56,166,201,183,217,182,
190,237,63,244,169,219,8,67,58,62,153,241,229,251,83,51,225,28,49,116,152,108,143,30,149,231,21,247,76,135,143,37,206,159,209,113,181,227,13,195,92,51,100,114,140,117,171,226,153,67,121,21,219,58,182,
243,178,255,190,171,216,71,215,117,36,80,255,1,72,139,39,112,125,231,148,143,204,68,176,103,238,5,254,39,109,207,234,180,87,85,91,223,155,112,174,107,246,123,116,147,111,179,227,250,39,182,141,171,200,
159,156,227,253,84,142,247,138,209,62,189,241,234,222,238,47,71,253,134,226,205,201,92,156,113,46,27,42,178,221,144,152,222,222,104,234,111,75,254,222,73,121,191,108,247,106,218,134,236,1,201,28,151,216,
52,84,216,18,32,176,142,5,50,17,45,37,234,158,231,56,109,187,7,152,202,47,141,27,38,229,239,21,75,242,27,58,237,117,185,59,93,249,38,255,150,78,159,170,58,170,165,77,249,179,157,126,87,164,238,177,137,
131,19,199,39,190,145,232,165,31,180,99,77,142,237,167,157,142,223,29,247,91,174,156,253,15,236,140,81,85,175,26,246,75,126,175,196,9,137,186,191,59,78,31,30,250,217,46,150,128,75,254,197,250,188,183,
157,109,86,99,245,164,253,242,206,169,15,171,206,118,37,218,118,27,234,135,126,109,219,85,25,247,174,182,226,97,228,31,204,88,119,39,234,9,252,247,19,39,102,172,175,118,198,171,7,71,245,4,254,255,158,
114,76,247,38,190,149,63,188,165,243,199,111,237,212,169,90,0,1,19,234,2,124,200,51,78,113,187,213,93,250,29,149,9,170,110,3,213,43,71,67,170,87,131,134,116,64,218,235,82,183,55,161,246,198,27,246,123,
36,182,103,207,24,228,200,25,245,109,245,177,57,238,107,58,113,65,234,94,217,118,92,77,62,251,30,158,254,207,25,237,115,79,202,223,30,213,41,46,136,128,123,168,11,242,65,119,78,179,55,1,214,68,121,68,
162,189,55,120,113,202,245,190,234,144,106,149,186,51,38,212,223,13,7,48,218,214,132,250,195,81,221,184,88,183,34,198,19,95,245,169,186,55,100,98,60,40,171,205,127,85,197,156,116,102,250,190,127,210,231,
41,217,110,187,69,210,236,83,247,159,223,149,177,110,106,234,100,23,72,192,132,186,64,31,246,232,84,235,69,251,122,89,254,241,77,125,77,148,195,101,253,80,125,94,50,243,38,212,122,169,253,71,195,14,59,
104,91,47,248,247,210,147,123,149,171,168,171,55,19,234,65,210,74,38,212,233,107,99,157,241,47,76,221,153,153,76,175,238,180,169,90,16,1,151,252,11,242,65,143,79,51,255,240,31,72,221,248,62,234,51,82,
247,236,166,239,253,201,215,3,157,191,54,117,213,254,144,7,75,41,111,201,120,255,104,250,236,136,236,147,102,12,122,227,140,250,149,84,215,19,251,250,6,216,118,239,199,174,100,231,81,159,250,159,206,57,
89,193,30,63,170,87,92,32,1,43,212,5,250,176,59,167,90,151,253,211,39,215,201,215,106,173,45,95,151,201,166,94,206,175,7,47,195,189,198,23,36,127,72,162,77,189,219,7,109,251,35,145,63,102,198,32,179,110,
5,180,221,127,158,194,59,219,138,228,235,193,220,245,57,191,213,60,72,187,37,251,212,215,108,31,147,168,75,254,54,213,226,228,197,137,175,196,235,192,140,91,255,51,146,22,76,192,132,186,96,31,248,232,
116,123,19,97,251,213,206,225,242,181,157,80,95,52,26,163,138,189,113,58,221,254,183,170,76,80,245,162,252,135,58,123,215,42,123,37,19,234,157,153,224,106,82,125,184,233,212,140,115,73,13,146,99,58,40,
155,175,39,90,175,106,170,99,125,97,226,199,85,144,22,75,192,132,186,88,159,247,248,108,175,76,69,173,208,246,25,55,76,202,195,43,65,195,182,215,173,86,122,243,30,10,245,246,91,174,174,190,182,250,250,
116,168,55,10,234,193,207,201,137,154,192,198,233,115,153,224,102,221,91,109,251,238,145,241,246,110,43,154,252,253,25,163,38,230,85,165,236,243,151,140,249,193,236,180,185,179,99,61,40,51,161,118,96,
214,123,149,9,117,189,127,194,203,156,95,38,133,122,25,191,254,225,191,98,70,183,97,34,29,86,170,189,110,215,102,156,219,123,13,43,172,235,253,74,83,77,72,181,250,91,46,213,165,247,71,59,29,122,227,109,
76,191,122,157,169,151,238,137,65,221,39,254,64,206,227,250,94,135,101,234,174,152,209,118,240,140,122,213,235,92,192,67,169,117,254,1,175,224,244,54,207,232,83,19,211,48,161,214,101,245,172,167,224,179,
246,191,173,51,110,173,102,199,147,239,173,157,126,243,170,106,69,249,222,90,37,118,58,174,118,188,186,31,250,218,196,251,154,177,106,213,222,91,181,62,100,53,156,191,95,147,244,223,154,253,134,108,111,
53,61,180,217,174,99,1,19,234,58,254,112,87,120,106,231,166,95,111,178,220,148,9,99,219,147,251,108,107,114,249,66,103,188,255,164,238,156,78,125,85,93,154,184,99,212,246,147,140,53,158,240,190,51,234,
51,175,120,67,58,188,52,227,124,102,70,199,213,142,55,12,83,231,178,45,101,236,122,157,236,178,73,113,216,212,196,249,179,161,208,108,191,216,228,135,108,111,50,30,218,108,9,16,88,207,2,185,228,61,45,
241,143,196,144,110,74,166,158,230,79,83,202,71,36,234,119,67,135,116,87,50,189,75,238,118,159,250,153,189,33,213,111,134,190,113,218,216,100,82,255,246,196,111,18,227,159,251,75,213,214,59,19,151,39,
62,157,120,71,226,9,205,174,219,101,211,190,103,162,126,194,239,79,137,7,18,243,82,141,127,97,162,238,213,78,83,202,175,75,220,156,168,116,71,226,61,211,198,38,147,250,253,19,191,77,12,233,247,201,212,
45,11,137,0,129,69,21,200,36,176,119,226,21,137,151,36,150,102,57,164,237,133,137,250,81,144,89,15,178,30,178,107,250,29,158,120,121,226,192,135,52,236,2,133,28,115,253,248,245,49,137,89,15,180,166,103,
145,62,135,37,158,63,173,144,33,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,
0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,
64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,
16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,
2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,
0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,
64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,
16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,
2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,
0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,8,16,32,
64,128,0,1,2,4,8,16,32,64,128,0,1,2,4,214,150,192,127,1,155,10,145,142,127,15,174,92,0,0,0,0,73,69,78,68,174,66,96,130,0,0};

const char* GuiComponent::bg_png = (const char*) resource_GuiComponent_bg_png;
const int GuiComponent::bg_pngSize = 3801;


//[EndFile] You can add extra defines here...
//[/EndFile]

